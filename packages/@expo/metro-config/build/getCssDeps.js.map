{"version":3,"file":"getCssDeps.js","names":["_js","data","require","_path","_interopRequireDefault","obj","__esModule","default","getCssModules","dependencies","processModuleFilter","projectRoot","promises","module","values","isJsModule","getJsOutput","type","path","relative","cssMetadata","getCssMetadata","contents","code","push","_module$output$","output","css","Error","JSON","stringify"],"sources":["../src/getCssDeps.ts"],"sourcesContent":["import type { Module } from 'metro';\nimport { getJsOutput, isJsModule } from 'metro/src/DeltaBundler/Serializers/helpers/js';\nimport path from 'path';\n\nexport type ReadOnlyDependencies<T = any> = Map<string, Module<T>>;\n\ntype Options = {\n  processModuleFilter: (modules: Module) => boolean;\n  assetPlugins: readonly string[];\n  platform?: string | null;\n  projectRoot: string;\n  publicPath: string;\n};\n\ntype MetroModuleCSSMetadata = {\n  code: string;\n  lineCount: number;\n  map: any[];\n};\n\nexport type CSSAsset = {\n  // 'styles.css'\n  originFilename: string;\n  // '_expo/static/css/bc6aa0a69dcebf8e8cac1faa76705756.css'\n  filename: string;\n  // '\\ndiv {\\n    background: cyan;\\n}\\n\\n'\n  source: string;\n};\n\nexport function getCssModules(\n  dependencies: ReadOnlyDependencies,\n  { processModuleFilter, projectRoot }: Pick<Options, 'projectRoot' | 'processModuleFilter'>\n) {\n  const promises = [];\n\n  for (const module of dependencies.values()) {\n    if (\n      isJsModule(module) &&\n      processModuleFilter(module) &&\n      getJsOutput(module).type === 'js/module' &&\n      path.relative(projectRoot, module.path) !== 'package.json'\n    ) {\n      const cssMetadata = getCssMetadata(module);\n      if (cssMetadata) {\n        const contents = cssMetadata.code;\n        promises.push([module.path, contents]);\n      }\n    }\n  }\n\n  return promises;\n}\n\nfunction getCssMetadata(module: Module): MetroModuleCSSMetadata | null {\n  const data = module.output[0]?.data;\n  if (data && typeof data === 'object' && 'css' in data) {\n    if (typeof data.css !== 'object' || !('code' in (data as any).css)) {\n      throw new Error(\n        `Unexpected CSS metadata in Metro module (${module.path}): ${JSON.stringify(data.css)}`\n      );\n    }\n    return data.css as MetroModuleCSSMetadata;\n  }\n  return null;\n}\n"],"mappings":";;;;;;AACA,SAAAA,IAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,GAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,MAAA;EAAA,MAAAF,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAC,KAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAwB,SAAAG,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AA2BjB,SAASG,aAAaA,CAC3BC,YAAkC,EAClC;EAAEC,mBAAmB;EAAEC;AAAkE,CAAC,EAC1F;EACA,MAAMC,QAAQ,GAAG,EAAE;EAEnB,KAAK,MAAMC,MAAM,IAAIJ,YAAY,CAACK,MAAM,EAAE,EAAE;IAC1C,IACE,IAAAC,gBAAU,EAACF,MAAM,CAAC,IAClBH,mBAAmB,CAACG,MAAM,CAAC,IAC3B,IAAAG,iBAAW,EAACH,MAAM,CAAC,CAACI,IAAI,KAAK,WAAW,IACxCC,eAAI,CAACC,QAAQ,CAACR,WAAW,EAAEE,MAAM,CAACK,IAAI,CAAC,KAAK,cAAc,EAC1D;MACA,MAAME,WAAW,GAAGC,cAAc,CAACR,MAAM,CAAC;MAC1C,IAAIO,WAAW,EAAE;QACf,MAAME,QAAQ,GAAGF,WAAW,CAACG,IAAI;QACjCX,QAAQ,CAACY,IAAI,CAAC,CAACX,MAAM,CAACK,IAAI,EAAEI,QAAQ,CAAC,CAAC;MACxC;IACF;EACF;EAEA,OAAOV,QAAQ;AACjB;AAEA,SAASS,cAAcA,CAACR,MAAc,EAAiC;EAAA,IAAAY,eAAA;EACrE,MAAMxB,IAAI,IAAAwB,eAAA,GAAGZ,MAAM,CAACa,MAAM,CAAC,CAAC,CAAC,cAAAD,eAAA,uBAAhBA,eAAA,CAAkBxB,IAAI;EACnC,IAAIA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,KAAK,IAAIA,IAAI,EAAE;IACrD,IAAI,OAAOA,IAAI,CAAC0B,GAAG,KAAK,QAAQ,IAAI,EAAE,MAAM,IAAK1B,IAAI,CAAS0B,GAAG,CAAC,EAAE;MAClE,MAAM,IAAIC,KAAK,CACZ,4CAA2Cf,MAAM,CAACK,IAAK,MAAKW,IAAI,CAACC,SAAS,CAAC7B,IAAI,CAAC0B,GAAG,CAAE,EAAC,CACxF;IACH;IACA,OAAO1B,IAAI,CAAC0B,GAAG;EACjB;EACA,OAAO,IAAI;AACb"}
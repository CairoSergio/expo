{"version":3,"file":"getCssDeps.js","names":["_crypto","data","_interopRequireDefault","require","_js","_path","_css","obj","__esModule","default","getCssModules","dependencies","processModuleFilter","projectRoot","assets","module","values","isJsModule","getJsOutput","type","path","relative","cssMetadata","getCssMetadata","contents","code","filename","join","STATIC_EXPORT_DIRECTORY","getFileName","hashString","originFilename","push","source","metadata","hmrId","pathToHtmlSafeName","_module$output$","output","css","Error","JSON","stringify","basename","replace","str","crypto","createHash","update","digest"],"sources":["../src/getCssDeps.ts"],"sourcesContent":["import crypto from 'crypto';\nimport type { Module } from 'metro';\nimport { getJsOutput, isJsModule } from 'metro/src/DeltaBundler/Serializers/helpers/js';\nimport path from 'path';\nimport { pathToHtmlSafeName } from './transform-worker/css';\n\nexport type ReadOnlyDependencies<T = any> = Map<string, Module<T>>;\n\ntype Options = {\n  processModuleFilter: (modules: Module) => boolean;\n  assetPlugins: readonly string[];\n  platform?: string | null;\n  projectRoot: string;\n  publicPath: string;\n};\n\ntype MetroModuleCSSMetadata = {\n  code: string;\n  lineCount: number;\n  map: any[];\n};\n\nexport type SerialAsset = {\n  // 'styles.css'\n  originFilename: string;\n  // '_expo/static/css/bc6aa0a69dcebf8e8cac1faa76705756.css'\n  filename: string;\n  // '\\ndiv {\\n    background: cyan;\\n}\\n\\n'\n  source: string;\n  type: 'css' | 'js';\n\n  metadata: Record<string, string>;\n};\n\nexport function getCssModules(\n  dependencies: ReadOnlyDependencies,\n  { processModuleFilter, projectRoot }: Pick<Options, 'projectRoot' | 'processModuleFilter'>\n): SerialAsset[] {\n  const assets: SerialAsset[] = [];\n\n  for (const module of dependencies.values()) {\n    if (\n      isJsModule(module) &&\n      processModuleFilter(module) &&\n      getJsOutput(module).type === 'js/module' &&\n      path.relative(projectRoot, module.path) !== 'package.json'\n    ) {\n      const cssMetadata = getCssMetadata(module);\n      if (cssMetadata) {\n        const contents = cssMetadata.code;\n        const filename = path.join(\n          // Consistent location\n          STATIC_EXPORT_DIRECTORY,\n          // Hashed file contents + name for caching\n          getFileName(module.path) + '-' + hashString(module.path + contents) + '.css'\n        );\n        const originFilename = path.relative(projectRoot, module.path);\n        assets.push({\n          type: 'css',\n          originFilename,\n          filename,\n          source: contents,\n          metadata: {\n            hmrId: pathToHtmlSafeName(originFilename),\n          },\n        });\n      }\n    }\n  }\n\n  return assets;\n}\n\nfunction getCssMetadata(module: Module): MetroModuleCSSMetadata | null {\n  const data = module.output[0]?.data;\n  if (data && typeof data === 'object' && 'css' in data) {\n    if (typeof data.css !== 'object' || !('code' in (data as any).css)) {\n      throw new Error(\n        `Unexpected CSS metadata in Metro module (${module.path}): ${JSON.stringify(data.css)}`\n      );\n    }\n    return data.css as MetroModuleCSSMetadata;\n  }\n  return null;\n}\n\n// s = static\nconst STATIC_EXPORT_DIRECTORY = '_expo/static/css';\n\nfunction getFileName(module: string) {\n  return path.basename(module).replace(/\\.[^.]+$/, '');\n}\n\nfunction hashString(str: string) {\n  return crypto.createHash('md5').update(str).digest('hex');\n}\n"],"mappings":"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"}
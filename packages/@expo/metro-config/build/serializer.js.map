{"version":3,"file":"serializer.js","names":["_baseJSBundle","data","_interopRequireDefault","require","_bundleToString","_countLines","_path","_env","_getCssDeps","_fs","obj","__esModule","default","debug","replaceEnvironmentVariables","code","env","replace","match","_env$name","name","test","value","JSON","stringify","getTransformEnvironment","url","getAllExpoPublicEnvVars","key","process","startsWith","serializeWithEnvironmentVariables","entryPoint","preModules","graph","options","sourceUrl","dev","str","Object","keys","map","join","firstModule","restModules","getEnvPrelude","dependencies","values","path","index","output","contents","Map","getSource","Buffer","from","inverseDependencies","Set","type","lineCount","countLines","withExpoSerializers","config","processors","EXPO_NO_CLIENT_ENV_VARS","push","withSerialProcessors","_config$serializer","originalSerializer","serializer","customSerializer","console","warn","createSerializerFromSerialProcessors","getDefaultSerializer","props","_props$3$sourceUrl","bundle","baseJSBundle","includes","bundleToString","cssDeps","getCssModules","projectRoot","processModuleFilter","jsAsset","filename","originFilename","metadata","source","processor","finalSerializer","writeSerialAssets","assets","outputDir","forEach","asset","fs","mkdirSync","dirname","recursive","writeFileSync","htmlFromSerialAssets","bundleUrl","styleString","filter","hmrId","jsAssets","scripts","appendLinkToHtml","html","links","link","linkTag","rel","href","as"],"sources":["../src/serializer.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport type { Graph, MixedOutput, Module, SerializerOptions } from 'metro';\nimport { ConfigT, InputConfigT } from 'metro-config';\nimport baseJSBundle from 'metro/src/DeltaBundler/Serializers/baseJSBundle';\nimport bundleToString from 'metro/src/lib/bundleToString';\nimport countLines from 'metro/src/lib/countLines';\nimport path from 'path';\n\nimport { env } from './env';\nimport { getCssModules, SerialAsset } from './getCssDeps';\nimport { pathToHtmlSafeName } from './transform-worker/css';\n\nconst debug = require('debug')('expo:metro-config:serializer') as typeof console.log;\n\ntype Serializer = NonNullable<ConfigT['serializer']['customSerializer']>;\n\ntype SerializerParameters = Parameters<Serializer>;\n\n// A serializer that processes the input and returns a modified version.\n// Unlike a serializer, these can be chained together.\ntype SerialProcessor = (...props: SerializerParameters) => SerializerParameters;\n\nexport function replaceEnvironmentVariables(\n  code: string,\n  env: Record<string, string | undefined>\n): string {\n  // match and replace env variables that aren't NODE_ENV or JEST_WORKER_ID\n  // return code.match(/process\\.env\\.(EXPO_PUBLIC_[A-Z_]+)/g);\n  return code.replace(/process\\.env\\.([a-zA-Z0-9_]+)/gm, (match) => {\n    const name = match.replace('process.env.', '');\n    if (\n      // Must start with EXPO_PUBLIC_ to be replaced\n      !/^EXPO_PUBLIC_/.test(name)\n    ) {\n      return match;\n    }\n\n    const value = JSON.stringify(env[name] ?? '');\n    debug(`Inlining environment variable \"${match}\" with ${value}`);\n    return value;\n  });\n}\n\nexport function getTransformEnvironment(url: string): string | null {\n  const match = url.match(/[&?]transform\\.environment=([^&]+)/);\n  return match ? match[1] : null;\n}\n\nfunction getAllExpoPublicEnvVars() {\n  // Create an object containing all environment variables that start with EXPO_PUBLIC_\n  const env = {};\n  for (const key in process.env) {\n    if (key.startsWith('EXPO_PUBLIC_')) {\n      // @ts-ignore\n      env[key] = process.env[key];\n    }\n  }\n  return env;\n}\n\nexport function serializeWithEnvironmentVariables(\n  entryPoint: string,\n  preModules: readonly Module[],\n  graph: Graph,\n  options: SerializerOptions\n): SerializerParameters {\n  // Skip replacement in Node.js environments.\n  if (options.sourceUrl && getTransformEnvironment(options.sourceUrl) === 'node') {\n    debug('Skipping environment variable inlining in Node.js environment.');\n    return [entryPoint, preModules, graph, options];\n  }\n\n  // Adds about 5ms on a blank Expo Router app.\n  // TODO: We can probably cache the results.\n\n  // In development, we need to add the process.env object to ensure it\n  // persists between Fast Refresh updates.\n  if (options.dev) {\n    // Set the process.env object to the current environment variables object\n    // ensuring they aren't iterable, settable, or enumerable.\n    const str = `process.env=Object.defineProperties(process.env, {${Object.keys(\n      getAllExpoPublicEnvVars()\n    )\n      .map((key) => `${JSON.stringify(key)}: { value: ${JSON.stringify(process.env[key])} }`)\n      .join(',')}});`;\n\n    const [firstModule, ...restModules] = preModules;\n    // const envCode = `var process=this.process||{};${str}`;\n    // process.env\n    return [\n      entryPoint,\n      [\n        // First module defines the process.env object.\n        firstModule,\n        // Second module modifies the process.env object.\n        getEnvPrelude(str),\n        // Now we add the rest\n        ...restModules,\n      ],\n      graph,\n      options,\n    ];\n  }\n\n  // In production, inline all process.env variables to ensure they cannot be iterated and read arbitrarily.\n  for (const value of graph.dependencies.values()) {\n    // Skip node_modules, the feature is a bit too sensitive to allow in arbitrary code.\n    if (/node_modules/.test(value.path)) {\n      continue;\n    }\n\n    for (const index in value.output) {\n      // TODO: This probably breaks source maps.\n      const code = replaceEnvironmentVariables(value.output[index].data.code, process.env);\n      value.output[index].data.code = code;\n    }\n  }\n  return [entryPoint, preModules, graph, options];\n}\n\nfunction getEnvPrelude(contents: string): Module<MixedOutput> {\n  const code = '// HMR env vars from Expo CLI (dev-only)\\n' + contents;\n  const name = '__env__';\n\n  return {\n    dependencies: new Map(),\n    getSource: (): Buffer => Buffer.from(code),\n    inverseDependencies: new Set(),\n    path: name,\n    output: [\n      {\n        type: 'js/script/virtual',\n        data: {\n          code,\n          lineCount: countLines(code),\n          map: [],\n        },\n      },\n    ],\n  };\n}\n\nexport function withExpoSerializers(config: InputConfigT): InputConfigT {\n  const processors: SerialProcessor[] = [];\n  if (!env.EXPO_NO_CLIENT_ENV_VARS) {\n    processors.push(serializeWithEnvironmentVariables);\n  }\n\n  return withSerialProcessors(config, processors);\n}\n\n// There can only be one custom serializer as the input doesn't match the output.\n// Here we simply run\nexport function withSerialProcessors(\n  config: InputConfigT,\n  processors: SerialProcessor[]\n): InputConfigT {\n  const originalSerializer = config.serializer?.customSerializer;\n\n  if (originalSerializer) {\n    console.warn('Custom Metro serializers are not supported with Expo CLI.');\n  }\n\n  return {\n    ...config,\n    serializer: {\n      ...config.serializer,\n      customSerializer: createSerializerFromSerialProcessors(processors, originalSerializer),\n    },\n  };\n}\n\nfunction getDefaultSerializer(): Serializer {\n  return (...props: SerializerParameters): string | any => {\n    const bundle = baseJSBundle(...props);\n    if (!props[3].sourceUrl?.includes('&_type=html')) {\n      // Default behavior if `_type=html` is not present in the URL.\n      return bundleToString(bundle).code;\n    }\n\n    const [, , graph, options] = props;\n\n    const cssDeps = getCssModules(graph.dependencies, {\n      projectRoot: options.projectRoot,\n      processModuleFilter: options.processModuleFilter,\n    });\n\n    const jsAsset: SerialAsset = {\n      filename: 'index.js',\n      originFilename: 'index.js',\n      type: 'js',\n      metadata: {},\n      source: bundleToString(bundle).code,\n    };\n\n    return JSON.stringify([jsAsset, ...cssDeps]);\n\n    // // Combine the CSS modules into tags that have hot refresh data attributes.\n    // const styleString = cssDeps\n    //   .map(([ipath, content]) => {\n    //     // TODO: No data id in prod\n    //     return (\n    //       `<style data-expo-css-hmr=\"${pathToHtmlSafeName(\n    //         path.relative(options.projectRoot, ipath)\n    //       )}\">` +\n    //       content +\n    //       '\\n</style>'\n    //     );\n    //   })\n    //   .join('');\n\n    // const url = options\n    //   .sourceUrl!.replace('&_type=html', '')\n    //   // Hack to make the path relative to the dev server.\n    //   .replace('http://192.168.1.118:19000', '');\n    // // Fast refresh only appears to work if we include a script with a URL.\n    // // Possibly https://github.com/expo/router/blob/348a352e031ac46e4f1f29b0f0dc0d609454e1c4/packages/expo-router/src/getDevServer/index.ts#L20\n    // const script = `<script src=\"${url}\"></script>`;\n    // // const script = '<script>' + bundleToString(bundle).code + '\\n</script>';\n\n    // // TODO: Render this statically\n    // return `<!DOCTYPE html>\n    // <html>\n    // <head>\n    // <meta charset=\"utf-8\">\n    // <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    // <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1.00001,viewport-fit=cover\">\n    // <style data-id=\"expo-reset\">#root,body{display:flex}#root,body,html{width:100%;-webkit-overflow-scrolling:touch;margin:0;padding:0;min-height:100%}#root{flex-shrink:0;flex-basis:auto;flex-grow:1;flex:1}html{scroll-behavior:smooth;-webkit-text-size-adjust:100%;height:calc(100% + env(safe-area-inset-top))}body{overflow-y:auto;overscroll-behavior-y:none;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-ms-overflow-style:scrollbar}</style>\n    //   ${styleString}\n    //   </head>\n    //   <body>\n    //   <div id=\"root\"></div>\n    //   ${script}\n    //   </body>`;\n  };\n}\n\nexport function createSerializerFromSerialProcessors(\n  processors: (SerialProcessor | undefined)[],\n  serializer?: Serializer\n): Serializer {\n  return (...props: SerializerParameters): ReturnType<Serializer> => {\n    for (const processor of processors) {\n      if (processor) {\n        props = processor(...props);\n      }\n    }\n\n    const finalSerializer = getDefaultSerializer();\n    // const finalSerializer = serializer ?? getDefaultSerializer();\n    return finalSerializer(...props);\n  };\n}\n\nimport fs from 'fs';\n\nexport function writeSerialAssets(assets: SerialAsset[], { outputDir }: { outputDir: string }) {\n  assets.forEach((asset) => {\n    const output = path.join(outputDir, asset.filename);\n    fs.mkdirSync(path.dirname(output), { recursive: true });\n    fs.writeFileSync(output, asset.source);\n  });\n}\n\nexport function htmlFromSerialAssets(\n  assets: SerialAsset[],\n  { dev, bundleUrl }: { dev: boolean; bundleUrl: string }\n) {\n  // Combine the CSS modules into tags that have hot refresh data attributes.\n  const styleString = assets\n    .filter((asset) => asset.type === 'css')\n    .map(({ metadata, filename, source }) => {\n      if (dev) {\n        // TODO: No data id in prod\n        return `<style data-expo-css-hmr=\"${metadata.hmrId}\">` + source + '\\n</style>';\n      } else {\n        return [\n          `<link rel=\"preload\" href=\"${filename}\" as=\"style\">`,\n          `<link rel=\"stylesheet\" href=\"${filename}\">`,\n        ].join('');\n      }\n    })\n    .join('');\n\n  const jsAssets = assets.filter((asset) => asset.type === 'js');\n\n  const scripts = bundleUrl\n    ? `<script src=\"${bundleUrl}\"></script>`\n    : jsAssets\n        .map(({ filename }) => {\n          return `<script src=\"${filename}\"></script>`;\n        })\n        .join('');\n  // const script = '<script>' + bundleToString(bundle).code + '\\n</script>';\n\n  // TODO: Render this statically\n  return `<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1.00001,viewport-fit=cover\">\n    <style data-id=\"expo-reset\">#root,body{display:flex}#root,body,html{width:100%;-webkit-overflow-scrolling:touch;margin:0;padding:0;min-height:100%}#root{flex-shrink:0;flex-basis:auto;flex-grow:1;flex:1}html{scroll-behavior:smooth;-webkit-text-size-adjust:100%;height:calc(100% + env(safe-area-inset-top))}body{overflow-y:auto;overscroll-behavior-y:none;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-ms-overflow-style:scrollbar}</style>\n    ${styleString}\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    ${scripts}\n  </body>\n</html>`;\n}\n\n// <link rel=\"preload\" href=\"/_expo/static/css/xxxxxx.css\" as=\"style\">\nexport function appendLinkToHtml(\n  html: string,\n  links: { rel: string; href: string; as?: string }[]\n) {\n  return html.replace(\n    '</head>',\n    links\n      .map((link) => {\n        let linkTag = `<link rel=\"${link.rel}\"`;\n\n        if (link.href) linkTag += ` href=\"${link.href}\"`;\n        if (link.as) linkTag += ` as=\"${link.as}\"`;\n\n        linkTag += '>';\n\n        return linkTag;\n      })\n      .join('') + '</head>'\n  );\n}\n"],"mappings":"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"}